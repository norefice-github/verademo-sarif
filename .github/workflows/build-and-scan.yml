# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:  [pull_request, push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
   
    - name: Download pipeline code
      uses: wei/curl@master
      with:
        args: -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
    - name: Unzip the Pipeline Scanner
      run: unzip pipeline-scan-LATEST.zip
    - name: Run Pipeline Scanner
      continue-on-error: true
      run: java -Dpipeline.debug=true -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --file "target/verademo.war" --fail_on_severity="Very High, High,Medium" -jo true
    - name: Convert pipeline scan output to SARIF format
      id: convert
      uses: Lerer/veracode-pipeline-scan-results-to-sarif@v1.0.5
      with:
        pipeline-results-json: results.json
        output-results-sarif: veracode-results.sarif
        source-base-path-1: "^com/veracode:src/main/java/com/veracode"
        source-base-path-2: "^WEB-INF:src/main/webapp/WEB-INF"
    - name: upload sarif file to repository
      uses: github/codeql-action/upload-sarif@v1
      with: # Path to SARIF file relative to the root of the repository
        sarif_file: veracode-results.sarif
        
        

  # This workflow contains a single job called "SAST_Scan"
  SAST_Scan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with: 
        java-version: '8'
    - uses: actions/upload-artifact@v2
      with:
        path: binaries_to_upload/*.jar
    - name: Veracode Upload and Scan Action Step
      uses: ./ # Uses an action in the root directory
      id: upload_and_scan
      with:
        filepath: 'target/verademo.war'
        vid: '${{ secrets.VERACODE_ID }}'
        vkey: '${{ secrets.VERACODE_KEY }}'
